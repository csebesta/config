#!/bin/bash

# Script for imitating backinfo in Ubuntu and Gnome based distributions
# Also adding support for Raspbian (LXDE)
# Color pallete: https://design.ubuntu.com/brand/colour-palette
# Colors: 2D2D2D (with F9F9F9)
# Alternate colors: 2C001E 002B36 333333
# Alternate text colors: 555555 999999
# Requires graphicsmagick

# Get screen resolution
RESOLUTION="$( xdpyinfo | awk '/dimensions/{print $2}' )"

# Get system information
HOSTNAME="$( hostname )" # Use uname -n instead? (POSIX standard)
USER="$( id -un )"

# Write output to TEXT variable
read -r -d '' TEXT << EOF
Logged on user: $USER
Login time: $(date +'%D %T')
EOF

# http://askubuntu.com/questions/66914/how-to-change-desktop-background-from-command-line-in-unity
# Use if command described in link above for backwards compatibility

# Create solid background and overlay text
FONT="/usr/share/fonts/truetype/ubuntu-font-family/Ubuntu-M.ttf"
gm convert \
	-size $RESOLUTION xc:#2d2d2d \
	-fill '#f9f9f9' -font $FONT -pointsize 48\
	-gravity Center \
	-draw "text 0,-50 '$HOSTNAME'" \
	-fill '#999999' -font $FONT -pointsize 16 \
	-gravity Center \
	-draw "text 0,0 '$TEXT'" \
	/tmp/backinfo.png
	
	# Set background using proper method
gsettings set org.gnome.desktop.background \
picture-uri file:///tmp/backinfo.png

# Detect if running on command line and output relevant info
#if [[ $- == *i* ]]; then
#	# Print to stdout when called from command line
#	echo "Resolution: $RESOLUTION"
#	echo "Hostname: $HOSTNAME"
#	echo "OS: $OS"
#	echo "Logged on user: $USER"
#	echo "CPU: $CORES at $CLOCK MHz"
#	echo "RAM: $RAM GB"
#	echo "IPv4 address: $IP"
#	echo "Machine domain: $DOMAIN"
#	echo "Login time: $(date)"
#	echo "Gnome version is: $GNOME"
#fi
