#!/bin/bash
# This file contains various observations on system behavior

# Sudo does not work with aliases (see bash man page)
# This problem can be corrected by adding a trailing space
alias sudo='sudo '

# Variables can be set using text file contents
# This is useful when working with complex variable names
# This works by way of command expansion
echo $(<filename)

# Aliases are not expanded in scripts (non-interactive shells)
# However functions will be expanded
# Create functions for any command used in various scripts (i.e. beep)

# The shebang (#!/bin/bash) eliminates the need for the .sh extension
# Scripts may then be one word with no alias required

# There is a set of conventions for varible names
# True variables (changing) contain lowercase letters
# Constants (varibles that do not change) are entirely uppercase

# An if statement (bash) using the square brackets references test
# The test command itself is not necessary, but its options may be used
# Instead of:
if [ test -f ~/somefile ]; fi
# Use this command:
if [ -f ~/somefile ]; fi

# It is difficult to discern the existence of an optimal terminal shortcut
# The grave (`) key is optimal for my purposes
# It is a dead key in nearly every instance
# This leaves the function keys open for application specific hotkeys
# My scheme with tilda is as follows:
# grave (`) key toggles terminal
# ctrl+grave key starts terminal if not running (shortcut to tildash)
# super+grave key inserts grave character

# The contents of a file can be passed to a command using these methods:
# ./program `cat file`
# ./program $( < file )
# ./program $( cat file )
# The latter two methods may be preferrable in terms of readability
# And the latter methods also allows nesting
# '<' and 'cat' will work equivalently
# Edit: Both are actually command substitution, but $() is more modern

# Converting MS-DOS files to unix text:
# (remove carriage return from end of all lines)
# tr - '\r' < dos_file > unix_file

# Databases are divided into records (columns) and fields (rows)
# These tabular datasets are separated by 'keys' (tabs, colons, etc.)
sort -t ':' -k 3nr foo1 | awk -F":" '{ printf "%s\n", $3 }'

# Output on the command line can be colorized
RED='\033[0;31m'
WHITE='\033[1;37m'
NC='\033[0m'
printf "I ${WHITE}LOVE${NC}\n"
# OR:
echo "I $(tput setaf 1)LOVE$(tput sgr 0)"

# Changing background of login screen:
# Will be neccessary when using backinfo
# It prevents the next user from seeing the previous user's info
FILE='/usr/share/glib-2.0/schemas/10_unity_greeter_background.gschema.override'
cat << EOF > $FILE
[com.canonical.unity-greeter]
draw-user-backgrounds=false
background='/foo/wallpaper.png'
EOF
